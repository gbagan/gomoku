import { Component } from "solid-js";
import { createStore } from "solid-js/store"
import { Adversary, Config, newConfig } from "../model.civet"

type NewGameComponent = Component<{
  config: Config
  closeDialog: => void
  newGame: (config: Config) => void
}>

adversaries := [["human", "Humain"], ["level1", "DÃ©butant"]]

NewGame: NewGameComponent := (props) =>
  [config, setConfig] := createStore {...props.config}

  setAdversary := (name: string) => setConfig "adversary", name as Adversary
  setAlignment := (i: number) => setConfig "alignment", i
  setHeight := (i: number) => setConfig "height", i
  setWidth := (i: number) => setConfig "width", i

  <div .dialog-title>Nouvelle partie
  <div class="dialog-body grid grid-cols-20/80 gap-8">
    <div .text-bold.text-lg>Adversaire
    <div .flex.gap-4>
      {adversaries.map(([name, fullname]) =>
        <button .togglebtn
          classList={"toggledbtn": name === config.adversary}
          onClick=[setAdversary, name]
        > {fullname}
      )}
    <div .text-bold.text-lg>Alignement</div>
    <div .flex.gap-4>
      {[3..8].map((i) =>
        <button .togglebtn
          classList={"toggledbtn": i === config.alignment}
          onClick=[setAlignment, i]
        > {i}
      )}
    </div>
    <div .text-bold.text-lg>Hauteur
    <div .grid.grid-cols-6.gap-4>
      {[3..20].map((i) =>
        <button .togglebtn
          classList={"toggledbtn": i === config.height}
          onClick=[setHeight, i]
        > {i}
      )}

    <div .text-bold.text-lg>Largeur
    <div .grid.grid-cols-6.gap-4>
      {[3..20].map((i) =>
        <button .togglebtn
          classList={{"toggledbtn": i === config.width}}
          onClick=[setWidth, i]
        > {i}
      )}
  <div .dialog-buttons>
    <button .btn onClick={props.closeDialog}>Annuler
    <button .btn onClick={[props.newGame, config]}>OK

export default NewGame